import org.json.JSONObject
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    signingConfigs {
        signing {
            keyAlias 'appkey'
            keyPassword 'bornplayer'
            storeFile file('../../appkey.keystore')
            storePassword 'bornplayer'
        }
    }
    compileSdkVersion 23
    buildToolsVersion '24.0.1'

    defaultConfig {
        applicationId "com.born2play.solitaire.theme"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 2
        versionName "1.1"
        signingConfig signingConfigs.signing
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDir "src/main/java"
            res.srcDir "src/main/res"
            jniLibs.srcDir "src/main/jniLibs"
            manifest.srcFile "src/main/AndroidManifest.xml"
            assets.srcDir "src/main/assets"
        }
    }
    def jsonfile = new File(getProjectDir().getPath()+"/../../scr/package.json")
    if (jsonfile.exists()){
        def jsonObject = new JSONObject(jsonfile.text)
        if (jsonObject != null){
            jsonObject = jsonObject.getJSONObject("theme")
            jsonObject.keys().toList().each {key ->
                def flavor = jsonObject.getJSONObject(key)
                def name = flavor.getString("name")
                def resDir = flavor.getString("resDir")
                def assetsDir = flavor.getString("assetsDir")

                sourceSets {
                    "${name}" {
                        res.srcDir "src/main/"+resDir
                        assets.srcDir "src/main/"+assetsDir
                    }
                }
                productFlavors {
                    "${name}" {
                        applicationId "${key}"
                        manifestPlaceholders = [package_name          : applicationId,]
                    }
                }
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha1'
}

assembleRelease.doLast {
    def time = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date())
    def dir = new File(getProjectDir().getPath()+"/build/outputs/apk/")
    def files = dir.listFiles()
    files.each {File file ->
        def fileName = file.name
        if (fileName.endsWith("release.apk")){
            //这里拷贝apk文件
            copy {
                from "./build/outputs/apk/" + fileName
                into "../../outputs/" + getProjectDir().getName()
                rename {
                    fileName = fileName - "release.apk" + "${time}.apk"
                }
            }
        }
    }
}
